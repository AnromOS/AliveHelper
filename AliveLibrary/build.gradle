apply plugin: 'com.android.library'
// add plugin
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
version = '0.0.3'
group = 'org.ancode.library'
def siteUrl = 'https://github.com/AnromOS/AliveHelper'
def gitUrl = 'https://github.com/AnromOS/AliveHelper.git'
android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 20
        versionCode 3
        versionName '0.0.3'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }

//    task makeJar(type: Copy) {
//        delete 'build/libs/myLibrary.jar'
//        from('build/intermediates/bundles/release/')
//        into('build/libs/')
//        include('classes.jar')
//        rename('classes.jar', 'myLibrary.jar')
//    }


}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.2.1'
}


install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                name 'code for alivelibrary'     //项目描述
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'andyliu'        //填写开发者的一些基本信息
                        name 'andyliu'    //填写开发者的一些基本信息
                        email 'andylzs1992@gmail.com'   //填写开发者的一些基本信息
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
// 生成jar包的task
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
// 生成jarDoc的task
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
// 生成javaDoc的jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
// 这里是读取Bintray相关的信息，我们上传项目到github上的时候会把gradle文件传上去，
// 所以不要把帐号密码的信息直接写在这里，写在local.properties中，这里动态读取。
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    //读取 local.properties 文件里面的 bintray.user
    user = properties.getProperty("bintray.user")
    //读取 local.properties 文件里面的 bintray.apikey
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        userOrg = "andyliuzs"      //发布到JCenter的组织，注意新版本的bintray是需要手动创建的
        repo = "maven"          //发布到JCenter上的仓库名称，注意新版本的bintray是需要手动创建的
        // 发布到Bintray上的项目名字，这里的名字不是compile 'com.arshowbaby:mylibrary:1.0.0'中的mylibrary
        name = "alivelibrary"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true  // 是否是公开项目
    }

}